# Ultra-Optimized Nginx Configuration for GlideApps Proxy
# Настроено для минимальных задержек и максимальной пропускной способности

upstream glide_proxy_backend {
    # Используем least_conn для лучшего распределения нагрузки
    least_conn;
    
    # Подключения к Node.js серверам
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s weight=1;
    # Добавьте дополнительные инстансы если используете несколько портов
    # server 127.0.0.1:3001 max_fails=3 fail_timeout=30s weight=1;
    # server 127.0.0.1:3002 max_fails=3 fail_timeout=30s weight=1;
    
    # Keepalive connections для лучшей производительности
    keepalive 32;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

# Лимиты скорости для защиты от DDoS
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=50r/s;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/s;

# Кэш для статических ресурсов
proxy_cache_path /var/cache/nginx/glide_static levels=1:2 keys_zone=static_cache:100m 
                 max_size=1g inactive=60m use_temp_path=off;

proxy_cache_path /var/cache/nginx/glide_api levels=1:2 keys_zone=api_cache:50m 
                 max_size=500m inactive=10m use_temp_path=off;

server {
    listen 80;
    server_name rus.vkusdoterra.ru;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name rus.vkusdoterra.ru;
    
    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/rus.vkusdoterra.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rus.vkusdoterra.ru/privkey.pem;
    
    # SSL Optimization
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    
    # SSL Performance
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/rus.vkusdoterra.ru/chain.pem;
    
    # Security Headers (relaxed for GlideApps)
    add_header X-Frame-Options "ALLOWALL" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Real-IP $remote_addr always;
    
    # HSTS (optional, be careful with subdomains)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Performance Optimizations
    client_max_body_size 100M;
    client_body_buffer_size 1m;
    client_body_timeout 15s;
    client_header_timeout 15s;
    keepalive_timeout 65s;
    keepalive_requests 1000;
    send_timeout 15s;
    
    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/truetype
        font/opentype
        application/font-woff
        application/font-woff2;
    
    # Brotli Compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Health check endpoint
    location = /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Static assets with aggressive caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot|webp|mp4|mp3|pdf)$ {
        # Rate limiting
        limit_req zone=static_limit burst=20 nodelay;
        
        # Proxy to backend
        proxy_pass http://glide_proxy_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Caching
        proxy_cache static_cache;
        proxy_cache_valid 200 304 1d;
        proxy_cache_valid 301 302 1h;
        proxy_cache_valid any 5m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Headers
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Performance
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # API requests with short-term caching
    location ~* ^/(api/|_api/|graphql) {
        # Rate limiting
        limit_req zone=api_limit burst=5 nodelay;
        
        # Proxy to backend
        proxy_pass http://glide_proxy_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Short-term caching for GET requests only
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri$query_string";
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        
        # Headers
        add_header X-Cache-Status $upstream_cache_status;
        
        # Performance
        proxy_buffering on;
        proxy_buffer_size 64k;
        proxy_buffers 8 64k;
        proxy_busy_buffers_size 128k;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # WebSocket connections
    location /socket.io/ {
        proxy_pass http://glide_proxy_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
    
    # Health check endpoints (bypass caching)
    location ~* ^/health {
        # Rate limiting
        limit_req zone=api_limit burst=10 nodelay;
        
        # Proxy to backend
        proxy_pass http://glide_proxy_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching
        proxy_cache off;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # All other requests
    location / {
        # Rate limiting
        limit_req zone=general_limit burst=10 nodelay;
        
        # Proxy to backend
        proxy_pass http://glide_proxy_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Performance optimizations
        proxy_buffering on;
        proxy_buffer_size 64k;
        proxy_buffers 8 64k;
        proxy_busy_buffers_size 128k;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(conf|log|sql|md|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging
    access_log /var/log/nginx/glide-proxy-access.log;
    error_log /var/log/nginx/glide-proxy-error.log;
}